name: CI
on:
  push:
    branches: [ main ]
    tags: ['*']
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test:
    name: Julia ${{ matrix.version }} – ${{ matrix.os }} – ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    permissions:
      actions: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        version: ['1.10','1.6','pre']
        os: [ubuntu-latest]
        arch: [x64]
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write
      statuses: write
    steps:
      - uses: actions/checkout@v4

      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'        # latest 1.x series (has the inline-table fix)

      - uses: julia-actions/cache@v2

      - name: Configure doc environment
        env:
          JULIA_PKG_PRECOMPILE_AUTO: "false"  # skip auto-precompile to avoid missing-source errors
        shell: julia --project=docs --color=yes {0}
        run: |
          using Pkg
          Pkg.develop(path=pwd())
          Pkg.instantiate()

      - uses: julia-actions/julia-buildpkg@v1

      - uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}

      - name: Run doctests
        shell: julia --project=docs --color=yes {0}
        run: |
          using Documenter: DocMeta, doctest
          using Quizify
          DocMeta.setdocmeta!(Quizify, :DocTestSetup, :(using Quizify); recursive=true)
          doctest(Quizify)